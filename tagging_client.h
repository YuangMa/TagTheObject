/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_TAGGING_CLIENT_H_
#define JSONRPC_CPP_STUB_TAGGING_CLIENT_H_

#include <jsonrpccpp/client.h>

class tagging_Client : public jsonrpc::Client
{
    public:
        tagging_Client(jsonrpc::IClientConnector &conn, jsonrpc::clientVersion_t type = jsonrpc::JSONRPC_CLIENT_V2) : jsonrpc::Client(conn, type) {}

        Json::Value createFile(const std::string& collaborators, const std::string& content, const std::string& filename, const std::string& owner) 
        {
            Json::Value p;
            p["collaborators"] = collaborators;
            p["content"] = content;
            p["filename"] = filename;
            p["owner"] = owner;
            Json::Value result = this->CallMethod("createFile",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        Json::Value updateFile(const std::string& collaborators, const std::string& content, const std::string& fhandle, const std::string& tag) 
        {
            Json::Value p;
            p["collaborators"] = collaborators;
            p["content"] = content;
            p["fhandle"] = fhandle;
            p["tag"] = tag;
            Json::Value result = this->CallMethod("updateFile",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        Json::Value getFile(const std::string& fhandle) 
        {
            Json::Value p;
            p["fhandle"] = fhandle;
            Json::Value result = this->CallMethod("getFile",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        Json::Value searchFileByTag(const std::string& tag) 
        {
            Json::Value p;
            p["tag"] = tag;
            Json::Value result = this->CallMethod("searchFileByTag",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
};

#endif //JSONRPC_CPP_STUB_TAGGING_CLIENT_H_
